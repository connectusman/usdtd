{"version":3,"sources":["views/8connect/index.tsx","components/PageSection/svg/CurvedSvg.tsx","components/PageSection/CurvedDivider.tsx","components/PageSection/index.tsx"],"names":["FlexWrapper","styled","PageSection","theme","mediaQueries","md","Container","lg","div","FlexWrapper2","Home","style","color","textAlign","scale","className","maxWidth","src","alt","sharedStyles","clipPath","clipFill","css","isDark","dark","light","colors","background","ConcaveContainer","Box","ConvexContainer","ConvexTop","width","height","id","clipPathUnits","d","ConvexBottom","ConcaveTop","ConcaveBottom","Wrapper","dividerFill","index","ComponentWrapper","CurvedDivider","dividerPosition","dividerComponent","concave","showConvexTop","showConvexBottom","showConcaveTop","showConcaveBottom","BackgroundColor","Flex","getPadding","ChildrenWrapper","sm","children","svgFill","hasCurvedDivider","concaveDivider","containerProps","innerProps","props"],"mappings":"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","file":"static/js/23.26b46f70.chunk.js","sourcesContent":["import React, { useEffect } from 'react'\r\nimport styled from 'styled-components'\r\nimport PageSection from 'components/PageSection'\r\nimport { useWeb3React } from '@web3-react/core'\r\nimport useTheme from 'hooks/useTheme'\r\nimport Container from 'components/Layout/Container'\r\nimport { PageMeta } from 'components/Layout/Page'\r\nimport './index.css'\r\nimport { Heading } from '@pancakeswap/uikit'\r\n\r\nconst StyledHeroSection = styled(PageSection)`\r\n  padding-top: 16px;\r\n\r\n  ${({ theme }) => theme.mediaQueries.md} {\r\n    padding-top: 48px;\r\n  }\r\n`\r\n\r\nconst UserBannerWrapper = styled(Container)`\r\n  z-index: 1;\r\n  position: absolute;\r\n  width: 100%;\r\n  top: 0;\r\n  left: 50%;\r\n  transform: translate(-50%, 0);\r\n  padding-left: 0px;\r\n  padding-right: 0px;\r\n\r\n  ${({ theme }) => theme.mediaQueries.lg} {\r\n    padding-left: 24px;\r\n    padding-right: 24px;\r\n  }\r\n`\r\n\r\nconst FlexWrapper = styled.div`\r\n  display:flex;\r\n  flex-direction:column;\r\n  align-items:center;\r\n  text-align:center;\r\n@media screen and (max-width: 900px) {\r\n}\r\n`\r\nconst FlexWrapper2 = styled.div`\r\n  display:flex;\r\n  flex-direction:column;\r\n  margin:20px;\r\n  margin-left:200px;\r\n  margin-right:200px;\r\n@media screen and (max-width: 900px) {\r\n  margin-left:20px;\r\n  margin-right:20px;\r\n}\r\n`\r\n\r\n  \r\nconst Home: React.FC = () => {\r\n  \r\n\r\n  return (\r\n    <FlexWrapper >\r\n      <PageMeta />\r\n     <FlexWrapper2 style={{color:\"#fff\"}}>\r\n       <Heading textAlign=\"center\" scale='xl'>\r\n         8-CONNECT NETWORKS\r\n       </Heading>\r\n       <br/>\r\n<br/>\r\n     <Heading textAlign=\"center\">The protocol will entail a oracle plugged into 8 different blockchains that will aggregate data \r\nfeeds from pools and farms across them and will have a multichain bridge to facilitate a gas\r\nefficient layer solution for the underlying avenues to be entered and executed in an efficient \r\nmanner. This multichain connection will be the largest interconnected network currently seen in \r\nthe space and will provide a larger selection of yield oppertunities then ever seen before by \r\nany other protocol.</Heading>\r\n\r\n\r\n<br/>\r\n<br/>\r\n\r\n<Heading textAlign=\"center\">Track your investments over 8 different chains in our dashboard\r\n& seemlessly switch between pools & farms in a gas efficient manner.</Heading>\r\n     </FlexWrapper2>\r\n     <FlexWrapper2 className=\"networks-block\" style={{color:\"#fff\"}}>\r\n                    <div className=\"main-network\">\r\n                        <img style={{maxWidth: \"100%\"}} className=\"network-image\" src=\"https://1inch.io/img/main/eth.png\" alt=\"eth\"/>\r\n                        <p className=\"text network-text\">Ethereum</p>\r\n                    </div>\r\n                    <div className=\"main-network\">\r\n                        <img style={{maxWidth: \"100%\"}} className=\"network-image\" src=\"https://1inch.io/img/main/gnosis.png\" alt=\"gnosis\"/>\r\n                        <p className=\"text network-text\">Gnosis</p>\r\n                    </div>\r\n                    <div className=\"main-network\">\r\n                        <img style={{maxWidth: \"100%\"}} className=\"network-image\" src=\"https://1inch.io/img/main/bsc.png\" alt=\"bsc\"/>\r\n                        <p className=\"text network-text\">BNB Chain</p>\r\n                    </div>\r\n                    <div className=\"main-network\">\r\n                        <img style={{maxWidth: \"100%\"}} className=\"network-image\" src=\"https://1inch.io/img/main/avalache.png\" alt=\"avalache\"/>\r\n                        <p className=\"text network-text\">Avalanche</p>\r\n                    </div>\r\n                    <div className=\"main-network\">\r\n                        <img style={{maxWidth: \"100%\"}} className=\"network-image\" src=\"https://1inch.io/img/main/polygon.png\" alt=\"polygon\"/>\r\n                        <p className=\"text network-text\">Polygon</p>\r\n                    </div>\r\n                    <div className=\"main-network\">\r\n                        <img style={{maxWidth: \"100%\"}} className=\"network-image\" src=\"https://1inch.io/img/main/arbitrum.png\" alt=\"arbitrum\"/>\r\n                        <p className=\"text network-text\">Arbitrum</p>\r\n                    </div>\r\n                    <div className=\"main-network\">\r\n                        <img style={{maxWidth: \"100%\"}} className=\"network-image\" src=\"https://1inch.io/img/main/optimism.png\" alt=\"optimism\"/>\r\n                        <p className=\"text network-text\">Optimism</p>\r\n                    </div>\r\n                    <div className=\"main-network\">\r\n                        <img style={{maxWidth: \"100%\"}} className=\"network-image\" src=\"https://1inch.io/img/main/fantom.png\" alt=\"fantom\"/>\r\n                        <p className=\"text network-text\">Fantom</p>\r\n                    </div>\r\n            </FlexWrapper2>\r\n    \r\n        </FlexWrapper>\r\n  )\r\n}\r\n\r\nexport default Home\r\n","import React from 'react'\nimport styled, { css, DefaultTheme } from 'styled-components'\nimport { Box } from '@pancakeswap/uikit'\nimport { ClipFill } from '../types'\n\ninterface CurveProps {\n  clipFill?: ClipFill\n}\n\ninterface ContainerProps extends CurveProps {\n  clipPath: string\n}\n\nconst sharedStyles = (theme: DefaultTheme, clipPath: string, clipFill?: ClipFill) => css`\n  width: 100%;\n  height: 20px;\n  clip-path: url(${clipPath});\n\n  background: ${() => {\n    if (theme.isDark) {\n      return clipFill?.dark || clipFill?.light || theme.colors.background\n    }\n    return clipFill?.light || theme.colors.background\n  }};\n\n  & svg {\n    display: block;\n  }\n`\n\nconst ConcaveContainer = styled(Box)<ContainerProps>`\n  ${({ theme, clipPath, clipFill }) => sharedStyles(theme, clipPath, clipFill)}\n  transform: ${({ clipPath }) => (clipPath === '#bottomConcaveCurve' ? 'translate(0, -13px)' : 'translate(0, 1px)')};\n`\n\nconst ConvexContainer = styled(Box)<ContainerProps>`\n  ${({ theme, clipPath, clipFill }) => sharedStyles(theme, clipPath, clipFill)}\n  transform: ${({ clipPath }) => (clipPath === '#bottomConvexCurve' ? 'translate(0, -13px)' : 'translate(0, -1px)')};\n`\n\nexport const ConvexTop: React.FC<CurveProps> = ({ clipFill }) => (\n  <ConvexContainer clipFill={clipFill} clipPath=\"#topConvexCurve\">\n    <svg width=\"0\" height=\"0\">\n      <defs>\n        <clipPath id=\"topConvexCurve\" clipPathUnits=\"objectBoundingBox\">\n          <path d=\"M 0,1 L 0,0 L 1,0 L 1,1 C 0.75 0, .25 0, 0 1 Z\" />\n        </clipPath>\n      </defs>\n    </svg>\n  </ConvexContainer>\n)\n\nexport const ConvexBottom: React.FC<CurveProps> = ({ clipFill }) => (\n  <ConvexContainer clipFill={clipFill} clipPath=\"#bottomConvexCurve\">\n    <svg width=\"0\" height=\"0\">\n      <defs>\n        <clipPath id=\"bottomConvexCurve\" clipPathUnits=\"objectBoundingBox\">\n          <path d=\"M 0,0 L 0,1 L 1,1 L 1,0 C .75 1, .25 1, 0 0 Z\" />\n        </clipPath>\n      </defs>\n    </svg>\n  </ConvexContainer>\n)\n\nexport const ConcaveTop: React.FC<CurveProps> = ({ clipFill }) => (\n  <ConcaveContainer clipFill={clipFill} clipPath=\"#topConcaveCurve\">\n    <svg width=\"0\" height=\"0\">\n      <defs>\n        <clipPath id=\"topConcaveCurve\" clipPathUnits=\"objectBoundingBox\">\n          <path d=\"M 0,0 L 0,1 L 1,1 L 1,0 C .75 1, .25 1, 0 0 Z\" />\n        </clipPath>\n      </defs>\n    </svg>\n  </ConcaveContainer>\n)\n\nexport const ConcaveBottom: React.FC<CurveProps> = ({ clipFill }) => (\n  <ConcaveContainer clipFill={clipFill} clipPath=\"#bottomConcaveCurve\">\n    <svg width=\"0\" height=\"0\">\n      <defs>\n        <clipPath id=\"bottomConcaveCurve\" clipPathUnits=\"objectBoundingBox\">\n          <path d=\"M 0,1 L 0,0 L 1,0 L 1,1 C .75 0.1, .25 0.1, 0 1 Z\" />\n        </clipPath>\n      </defs>\n    </svg>\n  </ConcaveContainer>\n)\n","import React from 'react'\nimport styled from 'styled-components'\nimport { ConcaveTop, ConcaveBottom, ConvexTop, ConvexBottom } from './svg/CurvedSvg'\nimport { DividerFill, ClipFill } from './types'\n\ninterface CurvedDividerProps extends WrapperProps {\n  svgFill?: string\n  dividerComponent?: React.ReactNode\n  dividerPosition?: 'top' | 'bottom'\n  concave?: boolean\n  clipFill?: ClipFill\n}\ninterface WrapperProps {\n  index: number\n  dividerFill?: DividerFill\n}\n\nconst Wrapper = styled.div<WrapperProps>`\n  background: ${({ theme, dividerFill }) => {\n    if (theme.isDark) {\n      return dividerFill?.dark || dividerFill?.light || 'none'\n    }\n    return dividerFill?.light || dividerFill?.dark || 'none'\n  }};\n  z-index: ${({ index }) => index};\n  position: relative;\n  display: flex;\n  align-items: center;\n  width: 100%;\n`\n\nconst ComponentWrapper = styled.div<WrapperProps>`\n  z-index: ${({ index }) => index + 1};\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n`\n\nconst CurvedDivider: React.FC<CurvedDividerProps> = ({\n  index,\n  dividerPosition,\n  dividerComponent,\n  concave,\n  clipFill,\n  dividerFill,\n}) => {\n  const showConvexTop = dividerPosition === 'top' && !concave\n  const showConvexBottom = dividerPosition === 'bottom' && !concave\n  const showConcaveTop = dividerPosition === 'top' && concave\n  const showConcaveBottom = dividerPosition === 'bottom' && concave\n\n  const getConcaveDivider = () => {\n    return (\n      <>\n        {showConcaveTop && <ConcaveTop clipFill={clipFill} />}\n        {showConcaveBottom && <ConcaveBottom clipFill={clipFill} />}\n      </>\n    )\n  }\n\n  const getConvexDivider = () => {\n    return (\n      <>\n        {showConvexTop && <ConvexTop clipFill={clipFill} />}\n        {showConvexBottom && <ConvexBottom clipFill={clipFill} />}\n      </>\n    )\n  }\n\n  return (\n    <Wrapper index={index} dividerFill={dividerFill}>\n      {dividerComponent && <ComponentWrapper index={index}>{dividerComponent}</ComponentWrapper>}\n      {getConcaveDivider()}\n      {getConvexDivider()}\n    </Wrapper>\n  )\n}\n\nexport default CurvedDivider\n","import React from 'react'\nimport styled from 'styled-components'\nimport { BoxProps, Box, Flex, FlexProps } from '@pancakeswap/uikit'\nimport Container from 'components/Layout/Container'\nimport CurvedDivider from './CurvedDivider'\nimport { ClipFill, DividerFill } from './types'\n\ninterface PageSectionProps extends BackgroundColorProps {\n  svgFill?: string\n  dividerComponent?: React.ReactNode\n  hasCurvedDivider?: boolean\n  dividerPosition?: 'top' | 'bottom'\n  concaveDivider?: boolean\n  containerProps?: BoxProps\n  innerProps?: BoxProps\n  clipFill?: ClipFill\n  dividerFill?: DividerFill\n}\n\ninterface BackgroundColorProps extends FlexProps {\n  index: number\n  background?: string\n  getPadding?: () => string\n}\n\nconst BackgroundColor = styled(Flex)<BackgroundColorProps>`\n  position: relative;\n  flex-direction: column;\n  align-items: center;\n  z-index: ${({ index }) => index - 1};\n  background: ${({ background, theme }) => background || theme.colors.background};\n  padding: ${({ getPadding }) => getPadding()};\n`\n\nconst ChildrenWrapper = styled(Container)`\n  min-height: auto;\n  padding-top: 16px;\n  padding-bottom: 16px;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    padding-top: 32px;\n    padding-bottom: 32px;\n  }\n\n  ${({ theme }) => theme.mediaQueries.lg} {\n    padding-top: 48px;\n    padding-bottom: 48px;\n  }\n`\n\nconst PageSection: React.FC<PageSectionProps> = ({\n  children,\n  background,\n  svgFill,\n  index = 1,\n  dividerComponent,\n  dividerPosition = 'bottom',\n  hasCurvedDivider = true,\n  concaveDivider = false,\n  clipFill,\n  dividerFill,\n  containerProps,\n  innerProps,\n  ...props\n}) => {\n  const getPadding = () => {\n    // No curved divider\n    if (!hasCurvedDivider) {\n      return '48px 0'\n    }\n    // Bottom curved divider\n    // Less bottom padding, as the divider is present there\n    if (dividerPosition === 'bottom') {\n      return '48px 0 14px'\n    }\n    // Top curved divider\n    // Less top padding, as the divider is present there\n    if (dividerPosition === 'top') {\n      return '14px 0 48px'\n    }\n    return '48px 0'\n  }\n\n  return (\n    <Box {...containerProps}>\n      {hasCurvedDivider && dividerPosition === 'top' && (\n        <CurvedDivider\n          svgFill={svgFill}\n          index={index}\n          concave={concaveDivider}\n          dividerPosition={dividerPosition}\n          dividerComponent={dividerComponent}\n          clipFill={clipFill}\n          dividerFill={dividerFill}\n        />\n      )}\n      <BackgroundColor background={background} index={index} getPadding={getPadding} {...props}>\n        <ChildrenWrapper {...innerProps}>{children}</ChildrenWrapper>\n      </BackgroundColor>\n      {hasCurvedDivider && dividerPosition === 'bottom' && (\n        <CurvedDivider\n          svgFill={svgFill}\n          index={index}\n          concave={concaveDivider}\n          dividerPosition={dividerPosition}\n          dividerComponent={dividerComponent}\n          clipFill={clipFill}\n          dividerFill={dividerFill}\n        />\n      )}\n    </Box>\n  )\n}\n\nexport default PageSection\n"],"sourceRoot":""}