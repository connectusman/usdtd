{"version":3,"sources":["state/voting/hooks.ts","views/Voting/components/Proposals/tags.tsx","views/Voting/components/CastVoteModal/styles.tsx","views/Voting/components/Layout.tsx","views/Voting/components/CastVoteModal/DetailsView.tsx","views/Voting/hooks/useGetVotingPower.tsx","components/ReactMarkdown/styles.tsx","components/ReactMarkdown/index.tsx","views/Voting/components/CastVoteModal/types.ts","views/Voting/Proposal/Details.tsx","views/Voting/components/TextEllipsis.tsx","views/Voting/Proposal/Results.tsx","views/Voting/components/CastVoteModal/MainView.tsx","views/Voting/components/CastVoteModal/index.tsx","views/Voting/Proposal/Vote.tsx","views/Voting/components/Proposal/VotesLoading.tsx","views/Voting/components/Proposal/Row.tsx","views/Voting/components/Proposal/VoteRow.tsx","views/Voting/Proposal/Votes.tsx","views/Voting/Proposal/index.tsx","views/Voting/helpers.ts","views/Voting/config.ts"],"names":["useGetProposals","proposals","useSelector","state","voting","Object","values","useGetProposal","proposalId","useGetVotes","votes","filter","vote","_inValid","useGetVotingStateLoadingStatus","voteLoadingStatus","useGetProposalLoadingStatus","proposalLoadingStatus","ProposalStateTag","proposalState","props","ProposalState","ACTIVE","PENDING","ProposalTypeTag","isCoreProposal","VotingBox","styled","div","theme","colors","cardBorder","ModalInner","mb","maxWidth","Layout","mediaQueries","lg","DetailsView","total","cakeBalance","cakeVaultBalance","cakePoolBalance","poolsBalance","cakeBnbLpBalance","t","useTranslation","as","fontSize","color","textTransform","bold","formatNumber","alignItems","justifyContent","textAlign","initialState","verificationHash","useGetVotingPower","block","isActive","useWeb3React","account","useState","votingPower","setVotingPower","isLoading","setIsLoading","useEffect","a","simpleRpcProvider","getBlockNumber","blockNumber","getActivePools","eligiblePools","poolAddresses","map","contractAddress","getAddress","getVotingPower","prevVotingPower","parseFloat","fetchVotingPower","Table","table","text","TableBox","ThemedComponent","Title","scale","my","markdownComponents","h1","h2","h3","h4","h5","h6","p","node","children","ol","ul","pre","ReactMarkdown","remarkPlugins","gfm","components","ConfirmVoteView","DetailBox","Box","background","Details","proposal","startDate","Date","start","endDate","end","href","IPFS_GATEWAY","id","ml","slice","getBscScanLink","author","truncateHash","snapshot","format","TextEllipsis","Text","Results","choices","results","calculateVoteResults","votingStatus","totalVotes","getTotalFromVotes","VotingStateLoadingStatus","IDLE","choice","index","choiceVotes","totalChoiceVote","progress","hasVoted","some","voter","toLowerCase","mt","title","variant","outline","mr","primaryStep","toLocaleString","undefined","minimumFractionDigits","maximumFractionDigits","LOADING","times","length","count","height","MainView","isPending","onConfirm","onViewDetails","onDismiss","label","onClick","style","cursor","width","endIcon","spin","disabled","CastVoteModal","onSuccess","MAIN","view","setView","modalIsOpen","setModalIsOpen","setIsPending","toastError","useToast","library","useWeb3Provider","useTheme","isStartView","handleBack","DETAILS","handleDismiss","handleConfirmVote","voteMsg","JSON","stringify","generatePayloadData","type","SnapshotCommand","VOTE","payload","value","metadata","toString","signMessage","sig","msg","address","sendSnapshotData","message","console","error","onBack","hideCloseButton","headerBackground","gradients","cardHeader","Choice","isChecked","isDisabled","ChoiceText","Vote","setVote","toastSuccess","dispatch","useAppDispatch","handleSuccess","fetchVotes","Number","useModal","presentCastVoteModal","flexShrink","checked","onChange","ConnectWalletButton","Row","Flex","StyledSkeleton","Skeleton","VotesLoading","AddressColumn","attrs","ChoiceColumn","VotingPowerColumn","Grid","sm","VoteRow","isVoter","hasVotingPower","parseVotePower","incomingVote","Votes","showAll","setShowAll","orderedVotes","orderBy","displayVotes","isFinished","py","px","Proposal","useParams","hasAccountVoted","isPageLoading","fetchProposal","Container","Page","Link","to","startIcon","body","PageLoader","ADMINS","includes","filterProposalsByType","proposalType","ProposalType","COMMUNITY","CORE","ALL","filterProposalsByState","generateMetaData","plugins","network","strategies","name","params","symbol","tokens","cake","decimals","version","SNAPSHOT_VERSION","timestamp","now","toFixed","space","PANUSDTD_SPACE","fetch","SNAPSHOT_HUB_API","method","headers","Accept","response","ok","json","Error","error_description","data","SNAPSHOT_VOTING_API","reduce","accum","choiceText","power","PROPOSALS_TO_SHOW","VOTE_THRESHOLD"],"mappings":"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","file":"static/js/14.4e61c2de.chunk.js","sourcesContent":["import { useSelector } from 'react-redux'\nimport { State } from '../types'\n\n// Voting\nexport const useGetProposals = () => {\n  const proposals = useSelector((state: State) => state.voting.proposals)\n  return Object.values(proposals)\n}\n\nexport const useGetProposal = (proposalId: string) => {\n  const proposal = useSelector((state: State) => state.voting.proposals[proposalId])\n  return proposal\n}\n\nexport const useGetVotes = (proposalId: string) => {\n  const votes = useSelector((state: State) => state.voting.votes[proposalId])\n  return votes ? votes.filter((vote) => vote._inValid !== true) : []\n}\n\nexport const useGetVotingStateLoadingStatus = () => {\n  const votingStatus = useSelector((state: State) => state.voting.voteLoadingStatus)\n  return votingStatus\n}\n\nexport const useGetProposalLoadingStatus = () => {\n  const votingStatus = useSelector((state: State) => state.voting.proposalLoadingStatus)\n  return votingStatus\n}\n","import React from 'react'\nimport { TagProps } from '@pancakeswap/uikit'\nimport { ClosedTag, CommunityTag, CoreTag, SoonTag, VoteNowTag } from 'components/Tags'\nimport { ProposalState } from 'state/types'\n\ninterface ProposalStateTagProps extends TagProps {\n  proposalState: ProposalState\n}\n\nexport const ProposalStateTag: React.FC<ProposalStateTagProps> = ({ proposalState, ...props }) => {\n  if (proposalState === ProposalState.ACTIVE) {\n    return <VoteNowTag {...props} />\n  }\n\n  if (proposalState === ProposalState.PENDING) {\n    return <SoonTag {...props} />\n  }\n\n  return <ClosedTag {...props} />\n}\n\ninterface ProposalTypeTagProps extends TagProps {\n  isCoreProposal: boolean\n}\n\nexport const ProposalTypeTag: React.FC<ProposalTypeTagProps> = ({ isCoreProposal, ...props }) => {\n  if (isCoreProposal) {\n    return <CoreTag {...props} />\n  }\n\n  return <CommunityTag {...props} />\n}\n","import React from 'react'\nimport { Box, BoxProps } from '@pancakeswap/uikit'\nimport styled from 'styled-components'\n\nexport const VotingBox = styled.div`\n  align-items: center;\n  border: 1px solid ${({ theme }) => theme.colors.cardBorder};\n  border-radius: 12px;\n  display: flex;\n  height: 64px;\n  justify-content: space-between;\n  margin-bottom: 24px;\n  padding: 0 16px;\n`\n\nexport const ModalInner: React.FC<BoxProps> = (props) => {\n  return <Box mb=\"24px\" maxWidth=\"320px\" {...props} />\n}\n","import styled from 'styled-components'\n\nconst Layout = styled.div`\n  align-items: start;\n  display: grid;\n  grid-gap: 32px;\n  grid-template-columns: minmax(0, 1fr);\n\n  ${({ theme }) => theme.mediaQueries.lg} {\n    grid-template-columns: 1fr 332px;\n  }\n`\n\nexport default Layout\n","import React from 'react'\nimport { Text, Flex } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport { formatNumber } from 'utils/formatBalance'\nimport { VotingBox, ModalInner } from './styles'\n\ninterface DetailsViewProps {\n  total: number\n  cakeBalance: number\n  cakeVaultBalance: number\n  cakePoolBalance: number\n  poolsBalance: number\n  cakeBnbLpBalance: number\n}\n\nconst DetailsView: React.FC<DetailsViewProps> = ({\n  total,\n  cakeBalance,\n  cakeVaultBalance,\n  cakePoolBalance,\n  poolsBalance,\n  cakeBnbLpBalance,\n}) => {\n  const { t } = useTranslation()\n\n  return (\n    <ModalInner mb=\"0\">\n      <Text as=\"p\" mb=\"24px\" fontSize=\"14px\" color=\"textSubtle\">\n        {t(\n          'Your voting power is determined by the amount of USDTd you held at the block detailed below. USDTd held in other places does not contribute to your voting power.',\n        )}\n      </Text>\n      <Text color=\"secondary\" textTransform=\"uppercase\" mb=\"4px\" bold fontSize=\"14px\">\n        {t('Overview')}\n      </Text>\n      <VotingBox>\n        <Text color=\"secondary\">{t('Your Voting Power')}</Text>\n        <Text bold fontSize=\"20px\">\n          {formatNumber(total, 0, 3)}\n        </Text>\n      </VotingBox>\n      <Text color=\"secondary\" textTransform=\"uppercase\" mb=\"4px\" bold fontSize=\"14px\">\n        {t('Your Cake Held Now')}\n      </Text>\n      <Flex alignItems=\"center\" justifyContent=\"space-between\" mb=\"4px\">\n        <Text color=\"textSubtle\" fontSize=\"16px\">\n          {t('Wallet')}\n        </Text>\n        <Text textAlign=\"right\">{formatNumber(cakeBalance, 0, 3)}</Text>\n      </Flex>\n      <Flex alignItems=\"center\" justifyContent=\"space-between\" mb=\"4px\">\n        <Text color=\"textSubtle\" fontSize=\"16px\">\n          {t('Manual USDTd Pool')}\n        </Text>\n        <Text textAlign=\"right\">{formatNumber(cakePoolBalance, 0, 3)}</Text>\n      </Flex>\n      <Flex alignItems=\"center\" justifyContent=\"space-between\" mb=\"4px\">\n        <Text color=\"textSubtle\" fontSize=\"16px\">\n          {t('Auto USDTd Pool')}\n        </Text>\n        <Text textAlign=\"right\">{formatNumber(cakeVaultBalance, 0, 3)}</Text>\n      </Flex>\n      <Flex alignItems=\"center\" justifyContent=\"space-between\" mb=\"4px\">\n        <Text color=\"textSubtle\" fontSize=\"16px\">\n          {t('Other USDTd Pools')}\n        </Text>\n        <Text textAlign=\"right\">{formatNumber(poolsBalance, 0, 3)}</Text>\n      </Flex>\n      <Flex alignItems=\"center\" justifyContent=\"space-between\" mb=\"4px\">\n        <Text color=\"textSubtle\" fontSize=\"16px\">\n          {t('USDTd BNB LP')}\n        </Text>\n        <Text textAlign=\"right\">{formatNumber(cakeBnbLpBalance, 0, 3)}</Text>\n      </Flex>\n    </ModalInner>\n  )\n}\n\nexport default DetailsView\n","import { useState, useEffect } from 'react'\nimport { useWeb3React } from '@web3-react/core'\nimport { getActivePools } from 'utils/calls'\nimport { getAddress } from 'utils/addressHelpers'\nimport { simpleRpcProvider } from 'utils/providers'\nimport { getVotingPower } from '../helpers'\n\ninterface State {\n  verificationHash: string\n  cakeBalance: number\n  cakeVaultBalance: number\n  cakePoolBalance: number\n  poolsBalance: number\n  cakeBnbLpBalance: number\n  total: number\n}\n\nconst initialState: State = {\n  verificationHash: null,\n  cakeBalance: 0,\n  cakeVaultBalance: 0,\n  cakePoolBalance: 0,\n  poolsBalance: 0,\n  cakeBnbLpBalance: 0,\n  total: 0,\n}\n\nconst useGetVotingPower = (block?: number, isActive = true): State & { isLoading: boolean } => {\n  const { account } = useWeb3React()\n  const [votingPower, setVotingPower] = useState(initialState)\n  const [isLoading, setIsLoading] = useState(!!account)\n\n  useEffect(() => {\n    const fetchVotingPower = async () => {\n      setIsLoading(true)\n\n      try {\n        const blockNumber = block || (await simpleRpcProvider.getBlockNumber())\n        const eligiblePools = await getActivePools(blockNumber)\n        const poolAddresses = eligiblePools.map(({ contractAddress }) => getAddress(contractAddress))\n        const {\n          cakeBalance,\n          cakeBnbLpBalance,\n          cakePoolBalance,\n          total,\n          poolsBalance,\n          cakeVaultBalance,\n          verificationHash,\n        } = await getVotingPower(account, poolAddresses, blockNumber)\n\n        if (isActive) {\n          setVotingPower((prevVotingPower) => ({\n            ...prevVotingPower,\n            verificationHash,\n            cakeBalance: parseFloat(cakeBalance),\n            cakeBnbLpBalance: parseFloat(cakeBnbLpBalance),\n            cakePoolBalance: parseFloat(cakePoolBalance),\n            poolsBalance: parseFloat(poolsBalance),\n            cakeVaultBalance: parseFloat(cakeVaultBalance),\n            total: parseFloat(total),\n          }))\n        }\n      } finally {\n        setIsLoading(false)\n      }\n    }\n\n    if (account && isActive) {\n      fetchVotingPower()\n    }\n  }, [account, block, setVotingPower, isActive, setIsLoading])\n\n  return { ...votingPower, isLoading }\n}\n\nexport default useGetVotingPower\n","import React from 'react'\nimport { Heading, Text } from '@pancakeswap/uikit'\nimport { NormalComponents, SpecialComponents } from 'react-markdown/src/ast-to-react'\nimport styled from 'styled-components'\n\nconst Table = styled.table`\n  margin-bottom: 32px;\n  margin-top: 32px;\n  width: 100%;\n\n  td,\n  th {\n    color: ${({ theme }) => theme.colors.text};\n    padding: 8px;\n  }\n`\nconst TableBox = styled.div`\n  width: 100%;\n  overflow: auto;\n  -webkit-overflow-scrolling: touch;\n`\n\nconst ThemedComponent = styled.div`\n  color: ${({ theme }) => theme.colors.text};\n  margin-bottom: 16px;\n  margin-top: 16px;\n\n  li {\n    margin-bottom: 8px;\n  }\n`\n\nconst Pre = styled.pre`\n  color: ${({ theme }) => theme.colors.text};\n  margin-bottom: 16px;\n  margin-top: 16px;\n  max-width: 100%;\n  overflow-x: auto;\n`\n\nconst AStyle = styled.a`\n  word-break: break-all;\n`\n\nconst Title = (props) => {\n  return <Heading as=\"h4\" scale=\"lg\" my=\"16px\" {...props} />\n}\n\nconst markdownComponents: Partial<NormalComponents & SpecialComponents> = {\n  h1: Title,\n  h2: Title,\n  h3: Title,\n  h4: Title,\n  h5: Title,\n  h6: Title,\n  p: (props) => {\n    return <Text as=\"p\" my=\"16px\" {...props} />\n  },\n  table: ({ node, ...props }) => {\n    return (\n      <TableBox>\n        <Table>{props.children}</Table>\n      </TableBox>\n    )\n  },\n  ol: (props) => {\n    return <ThemedComponent as=\"ol\" {...props} />\n  },\n  ul: (props) => {\n    return <ThemedComponent as=\"ul\" {...props} />\n  },\n  pre: Pre,\n  a: AStyle,\n}\n\nexport default markdownComponents\n","import React from 'react'\nimport ReactMarkdownLib, { ReactMarkdownOptions } from 'react-markdown'\nimport gfm from 'remark-gfm'\nimport markdownComponents from './styles'\n\nconst ReactMarkdown: React.FC<ReactMarkdownOptions> = (props) => {\n  return <ReactMarkdownLib remarkPlugins={[gfm]} components={markdownComponents} {...props} />\n}\n\nexport default ReactMarkdown\n","import { InjectedModalProps } from '@pancakeswap/uikit'\n\nexport enum ConfirmVoteView {\n  MAIN = 'main',\n  DETAILS = 'details',\n}\n\nexport interface CastVoteModalProps extends InjectedModalProps {\n  onSuccess: () => Promise<void>\n  proposalId: string\n  vote: {\n    label: string\n    value: number\n  }\n  block?: number\n}\n","import React from 'react'\nimport { Box, Card, CardBody, CardHeader, Flex, Heading, LinkExternal, Text } from '@pancakeswap/uikit'\nimport styled from 'styled-components'\nimport { format } from 'date-fns'\nimport { Proposal } from 'state/types'\nimport { useTranslation } from 'contexts/Localization'\nimport { getBscScanLink } from 'utils'\nimport truncateHash from 'utils/truncateHash'\nimport { IPFS_GATEWAY } from '../config'\nimport { ProposalStateTag } from '../components/Proposals/tags'\n\ninterface DetailsProps {\n  proposal: Proposal\n}\n\nconst DetailBox = styled(Box)`\n  background-color: ${({ theme }) => theme.colors.background};\n  border: 1px solid ${({ theme }) => theme.colors.cardBorder};\n  border-radius: 16px;\n`\n\nconst Details: React.FC<DetailsProps> = ({ proposal }) => {\n  const { t } = useTranslation()\n  const startDate = new Date(proposal.start * 1000)\n  const endDate = new Date(proposal.end * 1000)\n\n  return (\n    <Card mb=\"16px\">\n      <CardHeader>\n        <Heading as=\"h3\" scale=\"md\">\n          {t('Details')}\n        </Heading>\n      </CardHeader>\n      <CardBody>\n        <Flex alignItems=\"center\" mb=\"8px\">\n          <Text color=\"textSubtle\">{t('Identifier')}</Text>\n          <LinkExternal href={`${IPFS_GATEWAY}/${proposal.id}`} ml=\"8px\">\n            {proposal.id.slice(0, 8)}\n          </LinkExternal>\n        </Flex>\n        <Flex alignItems=\"center\" mb=\"8px\">\n          <Text color=\"textSubtle\">{t('Creator')}</Text>\n          <LinkExternal href={getBscScanLink(proposal.author, 'address')} ml=\"8px\">\n            {truncateHash(proposal.author)}\n          </LinkExternal>\n        </Flex>\n        <Flex alignItems=\"center\" mb=\"16px\">\n          <Text color=\"textSubtle\">{t('Snapshot')}</Text>\n          <LinkExternal href={getBscScanLink(proposal.snapshot, 'block')} ml=\"8px\">\n            {proposal.snapshot}\n          </LinkExternal>\n        </Flex>\n        <DetailBox p=\"16px\">\n          <ProposalStateTag proposalState={proposal.state} mb=\"8px\" />\n          <Flex alignItems=\"center\">\n            <Text color=\"textSubtle\" fontSize=\"14px\">\n              {t('Start Date')}\n            </Text>\n            <Text ml=\"8px\">{format(startDate, 'yyyy-MM-dd HH:mm')}</Text>\n          </Flex>\n          <Flex alignItems=\"center\">\n            <Text color=\"textSubtle\" fontSize=\"14px\">\n              {t('End Date')}\n            </Text>\n            <Text ml=\"8px\">{format(endDate, 'yyyy-MM-dd HH:mm')}</Text>\n          </Flex>\n        </DetailBox>\n      </CardBody>\n    </Card>\n  )\n}\n\nexport default Details\n","import styled from 'styled-components'\nimport { Text } from '@pancakeswap/uikit'\n\nconst TextEllipsis = styled(Text)`\n  overflow: hidden;\n  text-overflow: ellipsis;\n  white-space: nowrap;\n`\n\nexport default TextEllipsis\n","import React from 'react'\nimport {\n  Box,\n  Text,\n  Flex,\n  Card,\n  CardBody,\n  CardHeader,\n  Heading,\n  Progress,\n  Skeleton,\n  Tag,\n  CheckmarkCircleIcon,\n} from '@pancakeswap/uikit'\nimport { useWeb3React } from '@web3-react/core'\nimport times from 'lodash/times'\nimport { Vote, VotingStateLoadingStatus } from 'state/types'\nimport { useGetVotingStateLoadingStatus } from 'state/voting/hooks'\nimport { formatNumber } from 'utils/formatBalance'\nimport { useTranslation } from 'contexts/Localization'\nimport { calculateVoteResults, getTotalFromVotes } from '../helpers'\nimport TextEllipsis from '../components/TextEllipsis'\n\ninterface ResultsProps {\n  choices: string[]\n  votes: Vote[]\n}\n\nconst Results: React.FC<ResultsProps> = ({ choices, votes }) => {\n  const { t } = useTranslation()\n  const results = calculateVoteResults(votes)\n  const votingStatus = useGetVotingStateLoadingStatus()\n  const { account } = useWeb3React()\n  const totalVotes = getTotalFromVotes(votes)\n\n  return (\n    <Card>\n      <CardHeader>\n        <Heading as=\"h3\" scale=\"md\">\n          {t('Current Results')}\n        </Heading>\n      </CardHeader>\n      <CardBody>\n        {votingStatus === VotingStateLoadingStatus.IDLE &&\n          choices.map((choice, index) => {\n            const choiceVotes = results[choice] || []\n            const totalChoiceVote = getTotalFromVotes(choiceVotes)\n            const progress = totalVotes === 0 ? 0 : (totalChoiceVote / totalVotes) * 100\n            const hasVoted = choiceVotes.some((vote) => {\n              return account && vote.voter.toLowerCase() === account.toLowerCase()\n            })\n\n            return (\n              <Box key={choice} mt={index > 0 ? '24px' : '0px'}>\n                <Flex alignItems=\"center\" mb=\"8px\">\n                  <TextEllipsis mb=\"4px\" title={choice}>\n                    {choice}\n                  </TextEllipsis>\n                  {hasVoted && (\n                    <Tag variant=\"success\" outline ml=\"8px\">\n                      <CheckmarkCircleIcon mr=\"4px\" /> {t('Voted')}\n                    </Tag>\n                  )}\n                </Flex>\n                <Box mb=\"4px\">\n                  <Progress primaryStep={progress} scale=\"sm\" />\n                </Box>\n                <Flex alignItems=\"center\" justifyContent=\"space-between\">\n                  <Text color=\"textSubtle\">{t('%total% Votes', { total: formatNumber(totalChoiceVote, 0, 2) })}</Text>\n                  <Text>\n                    {progress.toLocaleString(undefined, { minimumFractionDigits: 2, maximumFractionDigits: 2 })}%\n                  </Text>\n                </Flex>\n              </Box>\n            )\n          })}\n\n        {votingStatus === VotingStateLoadingStatus.LOADING &&\n          times(choices.length).map((count, index) => {\n            return (\n              <Box key={count} mt={index > 0 ? '24px' : '0px'}>\n                <Skeleton height=\"36px\" mb=\"4px\" />\n              </Box>\n            )\n          })}\n      </CardBody>\n    </Card>\n  )\n}\n\nexport default Results\n","import React from 'react'\nimport { IconButton, Text, Skeleton, Button, AutoRenewIcon, ChevronRightIcon } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport { formatNumber } from 'utils/formatBalance'\nimport TextEllipsis from '../TextEllipsis'\nimport { VotingBox, ModalInner } from './styles'\nimport { CastVoteModalProps } from './types'\n\ninterface MainViewProps {\n  vote: {\n    label: string\n    value: number\n  }\n  isLoading: boolean\n  isPending: boolean\n  total: number\n  onConfirm: () => void\n  onViewDetails: () => void\n  onDismiss: CastVoteModalProps['onDismiss']\n}\n\nconst MainView: React.FC<MainViewProps> = ({\n  vote,\n  total,\n  isPending,\n  isLoading,\n  onConfirm,\n  onViewDetails,\n  onDismiss,\n}) => {\n  const { t } = useTranslation()\n\n  return (\n    <>\n      <ModalInner>\n        <Text color=\"secondary\" mb=\"8px\" textTransform=\"uppercase\" fontSize=\"12px\" bold>\n          {t('Voting For')}\n        </Text>\n        <TextEllipsis bold fontSize=\"20px\" mb=\"8px\" title={vote.label}>\n          {vote.label}\n        </TextEllipsis>\n        <Text color=\"secondary\" mb=\"8px\" textTransform=\"uppercase\" fontSize=\"12px\" bold>\n          {t('Your Voting Power')}\n        </Text>\n        {isLoading ? (\n          <Skeleton height=\"64px\" mb=\"24px\" />\n        ) : (\n          <VotingBox onClick={onViewDetails} style={{ cursor: 'pointer' }}>\n            <Text bold fontSize=\"20px\">\n              {formatNumber(total, 0, 3)}\n            </Text>\n            <IconButton scale=\"sm\" variant=\"text\">\n              <ChevronRightIcon width=\"24px\" />\n            </IconButton>\n          </VotingBox>\n        )}\n        <Text as=\"p\" color=\"textSubtle\" fontSize=\"14px\">\n          {t('Are you sure you want to vote for the above choice? This action cannot be undone.')}\n        </Text>\n      </ModalInner>\n      <Button\n        isLoading={isPending}\n        endIcon={isPending ? <AutoRenewIcon spin color=\"currentColor\" /> : null}\n        disabled={isLoading || total === 0}\n        width=\"100%\"\n        mb=\"8px\"\n        onClick={onConfirm}\n      >\n        {t('Confirm Vote')}\n      </Button>\n      <Button variant=\"secondary\" width=\"100%\" onClick={onDismiss}>\n        {t('Cancel')}\n      </Button>\n    </>\n  )\n}\n\nexport default MainView\n","import React, { useState } from 'react'\nimport { Box, Modal } from '@pancakeswap/uikit'\nimport { useWeb3React } from '@web3-react/core'\nimport { useTranslation } from 'contexts/Localization'\nimport { SnapshotCommand } from 'state/types'\nimport { signMessage } from 'utils/web3React'\nimport useToast from 'hooks/useToast'\nimport useWeb3Provider from 'hooks/useActiveWeb3React'\nimport useTheme from 'hooks/useTheme'\nimport { CastVoteModalProps, ConfirmVoteView } from './types'\nimport MainView from './MainView'\nimport DetailsView from './DetailsView'\nimport { generatePayloadData, Message, sendSnapshotData } from '../../helpers'\nimport useGetVotingPower from '../../hooks/useGetVotingPower'\n\nconst CastVoteModal: React.FC<CastVoteModalProps> = ({ onSuccess, proposalId, vote, block, onDismiss }) => {\n  const [view, setView] = useState<ConfirmVoteView>(ConfirmVoteView.MAIN)\n  const [modalIsOpen, setModalIsOpen] = useState(true)\n  const [isPending, setIsPending] = useState(false)\n  const { account } = useWeb3React()\n  const { t } = useTranslation()\n  const { toastError } = useToast()\n  const { library } = useWeb3Provider()\n  const { theme } = useTheme()\n  const {\n    isLoading,\n    total,\n    cakeBalance,\n    cakeVaultBalance,\n    cakePoolBalance,\n    poolsBalance,\n    cakeBnbLpBalance,\n    verificationHash,\n  } = useGetVotingPower(block, modalIsOpen)\n\n  const isStartView = view === ConfirmVoteView.MAIN\n  const handleBack = isStartView ? null : () => setView(ConfirmVoteView.MAIN)\n  const handleViewDetails = () => setView(ConfirmVoteView.DETAILS)\n\n  const title = {\n    [ConfirmVoteView.MAIN]: t('Confirm Vote'),\n    [ConfirmVoteView.DETAILS]: t('Voting Power'),\n  }\n\n  const handleDismiss = () => {\n    setModalIsOpen(false)\n    onDismiss()\n  }\n\n  const handleConfirmVote = async () => {\n    try {\n      setIsPending(true)\n      const voteMsg = JSON.stringify({\n        ...generatePayloadData(),\n        type: SnapshotCommand.VOTE,\n        payload: {\n          proposal: proposalId,\n          choice: vote.value,\n          metadata: {\n            votingPower: total.toString(),\n            verificationHash,\n          },\n        },\n      })\n\n      const sig = await signMessage(library, account, voteMsg)\n      const msg: Message = { address: account, msg: voteMsg, sig }\n\n      // Save proposal to snapshot\n      await sendSnapshotData(msg)\n      setIsPending(false)\n\n      await onSuccess()\n\n      handleDismiss()\n    } catch (error) {\n      setIsPending(false)\n      toastError(t('Error'), error?.message)\n      console.error(error)\n    }\n  }\n\n  return (\n    <Modal\n      title={title[view]}\n      onBack={handleBack}\n      onDismiss={onDismiss}\n      hideCloseButton={!isStartView}\n      headerBackground={theme.colors.gradients.cardHeader}\n    >\n      <Box mb=\"24px\" width=\"320px\">\n        {view === ConfirmVoteView.MAIN && (\n          <MainView\n            vote={vote}\n            isLoading={isLoading}\n            isPending={isPending}\n            total={total}\n            onConfirm={handleConfirmVote}\n            onViewDetails={handleViewDetails}\n            onDismiss={handleDismiss}\n          />\n        )}\n        {view === ConfirmVoteView.DETAILS && (\n          <DetailsView\n            total={total}\n            cakeBalance={cakeBalance}\n            cakeVaultBalance={cakeVaultBalance}\n            cakePoolBalance={cakePoolBalance}\n            poolsBalance={poolsBalance}\n            cakeBnbLpBalance={cakeBnbLpBalance}\n          />\n        )}\n      </Box>\n    </Modal>\n  )\n}\n\nexport default CastVoteModal\n","import React, { useState } from 'react'\nimport styled from 'styled-components'\nimport { Button, Card, CardBody, CardHeader, CardProps, Heading, Radio, Text, useModal } from '@pancakeswap/uikit'\nimport { useWeb3React } from '@web3-react/core'\nimport { useAppDispatch } from 'state'\nimport { Proposal } from 'state/types'\nimport { fetchVotes } from 'state/voting'\nimport useToast from 'hooks/useToast'\nimport { useTranslation } from 'contexts/Localization'\nimport ConnectWalletButton from 'components/ConnectWalletButton'\nimport CastVoteModal from '../components/CastVoteModal'\n\ninterface VoteProps extends CardProps {\n  proposal: Proposal\n}\n\ninterface State {\n  label: string\n  value: number\n}\n\nconst Choice = styled.label<{ isChecked: boolean; isDisabled: boolean }>`\n  align-items: center;\n  border: 1px solid ${({ theme, isChecked }) => theme.colors[isChecked ? 'success' : 'cardBorder']};\n  border-radius: 16px;\n  cursor: ${({ isDisabled }) => (isDisabled ? 'not-allowed' : 'pointer')};\n  display: flex;\n  margin-bottom: 16px;\n  padding: 16px;\n`\n\nconst ChoiceText = styled.div`\n  flex: 1;\n  padding-left: 16px;\n  overflow: hidden;\n  text-overflow: ellipsis;\n  white-space: nowrap;\n  width: 0;\n`\n\nconst Vote: React.FC<VoteProps> = ({ proposal, ...props }) => {\n  const [vote, setVote] = useState<State>(null)\n  const { t } = useTranslation()\n  const { toastSuccess } = useToast()\n  const dispatch = useAppDispatch()\n  const { account } = useWeb3React()\n\n  const handleSuccess = async () => {\n    toastSuccess(t('Vote cast!'))\n    dispatch(fetchVotes({ proposalId: proposal.id, block: Number(proposal.snapshot) }))\n  }\n\n  const [presentCastVoteModal] = useModal(\n    <CastVoteModal onSuccess={handleSuccess} proposalId={proposal.id} vote={vote} block={Number(proposal.snapshot)} />,\n  )\n\n  return (\n    <Card {...props}>\n      <CardHeader>\n        <Heading as=\"h3\" scale=\"md\">\n          {t('Cast your vote')}\n        </Heading>\n      </CardHeader>\n      <CardBody>\n        {proposal.choices.map((choice, index) => {\n          const isChecked = index + 1 === vote?.value\n\n          const handleChange = () => {\n            setVote({\n              label: choice,\n              value: index + 1,\n            })\n          }\n\n          return (\n            <Choice key={choice} isChecked={isChecked} isDisabled={!account}>\n              <div style={{ flexShrink: 0 }}>\n                <Radio scale=\"sm\" value={choice} checked={isChecked} onChange={handleChange} disabled={!account} />\n              </div>\n              <ChoiceText>\n                <Text as=\"span\" title={choice}>\n                  {choice}\n                </Text>\n              </ChoiceText>\n            </Choice>\n          )\n        })}\n        {account ? (\n          <Button onClick={presentCastVoteModal} disabled={vote === null}>\n            {t('Cast Vote')}\n          </Button>\n        ) : (\n          <ConnectWalletButton />\n        )}\n      </CardBody>\n    </Card>\n  )\n}\n\nexport default Vote\n","import React from 'react'\nimport { Box, Flex, Skeleton } from '@pancakeswap/uikit'\nimport times from 'lodash/times'\nimport styled from 'styled-components'\n\nconst Row = styled(Flex)`\n  border-bottom: 1px solid ${({ theme }) => theme.colors.cardBorder};\n  padding: 16px 24px;\n`\n\nconst StyledSkeleton = styled(Skeleton)`\n  flex: 1;\n`\n\nconst VotesLoading = () => {\n  return (\n    <Box>\n      {times(10).map((index) => (\n        <Row key={index}>\n          <Skeleton height=\"21px\" mr=\"32px\" width=\"100px\" />\n          <StyledSkeleton height=\"21px\" mr=\"32px\" width=\"100%\" />\n          <StyledSkeleton height=\"21px\" width=\"100%\" />\n        </Row>\n      ))}\n    </Box>\n  )\n}\n\nexport default VotesLoading\n","import styled from 'styled-components'\nimport { Grid, Box } from '@pancakeswap/uikit'\n\nexport const AddressColumn = styled(Box).attrs({ alignItems: 'center' })`\n  grid-area: address;\n`\n\nexport const ChoiceColumn = styled(Box)`\n  grid-area: choice;\n  overflow: hidden;\n`\n\nexport const VotingPowerColumn = styled(Box)`\n  justify-self: end;\n  grid-area: vote;\n`\n\nconst Row = styled(Grid)`\n  border-bottom: 1px solid ${({ theme }) => theme.colors.cardBorder};\n  grid-gap: 8px;\n  grid-template-areas:\n    'address address address'\n    'choice choice vote';\n  grid-template-columns: 1fr 1fr 120px;\n  padding: 8px 16px;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    grid-gap: 16px;\n    grid-template-areas: 'address choice vote';\n    padding: 16px 24px;\n  }\n`\n\nexport default Row\n","import React from 'react'\nimport { Flex, LinkExternal, Text, Tag, CheckmarkCircleIcon } from '@pancakeswap/uikit'\nimport truncateHash from 'utils/truncateHash'\nimport { getBscScanLink } from 'utils'\nimport { useTranslation } from 'contexts/Localization'\nimport { Vote } from 'state/types'\nimport { IPFS_GATEWAY } from '../../config'\nimport TextEllipsis from '../TextEllipsis'\nimport Row, { AddressColumn, ChoiceColumn, VotingPowerColumn } from './Row'\n\ninterface VoteRowProps {\n  vote: Vote\n  isVoter: boolean\n}\n\nconst VoteRow: React.FC<VoteRowProps> = ({ vote, isVoter }) => {\n  const { t } = useTranslation()\n  const hasVotingPower = !!vote.metadata?.votingPower\n  const votingPower = hasVotingPower\n    ? parseFloat(vote.metadata.votingPower).toLocaleString(undefined, {\n        minimumFractionDigits: 0,\n        maximumFractionDigits: 3,\n      })\n    : '--'\n\n  return (\n    <Row>\n      <AddressColumn>\n        <Flex alignItems=\"center\">\n          <LinkExternal href={getBscScanLink(vote.voter, 'address')}>{truncateHash(vote.voter)}</LinkExternal>\n          {isVoter && (\n            <Tag variant=\"success\" outline ml=\"8px\">\n              <CheckmarkCircleIcon mr=\"4px\" /> {t('Voted')}\n            </Tag>\n          )}\n        </Flex>\n      </AddressColumn>\n      <ChoiceColumn>\n        <TextEllipsis title={vote.proposal.choices[vote.choice - 1]}>\n          {vote.proposal.choices[vote.choice - 1]}\n        </TextEllipsis>\n      </ChoiceColumn>\n      <VotingPowerColumn>\n        <Flex alignItems=\"center\" justifyContent=\"end\">\n          <Text title={vote.metadata.votingPower}>{votingPower}</Text>\n          {hasVotingPower && <LinkExternal href={`${IPFS_GATEWAY}/${vote.id}`} />}\n        </Flex>\n      </VotingPowerColumn>\n    </Row>\n  )\n}\n\nexport default VoteRow\n","import React, { useState } from 'react'\nimport {\n  AutoRenewIcon,\n  Card,\n  CardHeader,\n  ChevronDownIcon,\n  Flex,\n  Heading,\n  Button,\n  ChevronUpIcon,\n} from '@pancakeswap/uikit'\nimport { useWeb3React } from '@web3-react/core'\nimport orderBy from 'lodash/orderBy'\nimport { useTranslation } from 'contexts/Localization'\nimport { Vote, VotingStateLoadingStatus } from 'state/types'\nimport { useGetVotingStateLoadingStatus } from 'state/voting/hooks'\nimport VotesLoading from '../components/Proposal/VotesLoading'\nimport VoteRow from '../components/Proposal/VoteRow'\n\nconst VOTES_PER_VIEW = 20\n\ninterface VotesProps {\n  votes: Vote[]\n}\n\nconst parseVotePower = (incomingVote: Vote) => {\n  let votingPower = parseFloat(incomingVote?.metadata?.votingPower)\n  if (!votingPower) votingPower = 0\n  return votingPower\n}\n\nconst Votes: React.FC<VotesProps> = ({ votes }) => {\n  const [showAll, setShowAll] = useState(false)\n  const { t } = useTranslation()\n  const { account } = useWeb3React()\n  const orderedVotes = orderBy(votes, [parseVotePower, 'created'], ['desc', 'desc'])\n  const displayVotes = showAll ? orderedVotes : orderedVotes.slice(0, VOTES_PER_VIEW)\n  const voteStatus = useGetVotingStateLoadingStatus()\n  const isFinished = voteStatus === VotingStateLoadingStatus.IDLE\n\n  const handleClick = () => {\n    setShowAll(!showAll)\n  }\n\n  return (\n    <Card>\n      <CardHeader>\n        <Flex alignItems=\"center\" justifyContent=\"space-between\">\n          <Heading as=\"h3\" scale=\"md\">\n            {t('Votes (%count%)', { count: votes.length.toLocaleString() })}\n          </Heading>\n          {!isFinished && <AutoRenewIcon spin width=\"22px\" />}\n        </Flex>\n      </CardHeader>\n      {!isFinished && <VotesLoading />}\n\n      {isFinished && displayVotes.length > 0 && (\n        <>\n          {displayVotes.map((vote) => {\n            const isVoter = account && vote.voter.toLowerCase() === account.toLowerCase()\n            return <VoteRow key={vote.id} vote={vote} isVoter={isVoter} />\n          })}\n          <Flex alignItems=\"center\" justifyContent=\"center\" py=\"8px\" px=\"24px\">\n            <Button\n              width=\"100%\"\n              onClick={handleClick}\n              variant=\"text\"\n              endIcon={\n                showAll ? (\n                  <ChevronUpIcon color=\"primary\" width=\"21px\" />\n                ) : (\n                  <ChevronDownIcon color=\"primary\" width=\"21px\" />\n                )\n              }\n              disabled={!isFinished}\n            >\n              {showAll ? t('Hide') : t('See All')}\n            </Button>\n          </Flex>\n        </>\n      )}\n\n      {isFinished && displayVotes.length === 0 && (\n        <Flex alignItems=\"center\" justifyContent=\"center\" py=\"32px\">\n          <Heading as=\"h5\">{t('No votes found')}</Heading>\n        </Flex>\n      )}\n    </Card>\n  )\n}\n\nexport default Votes\n","import React, { useEffect } from 'react'\nimport { ArrowBackIcon, Box, Button, Flex, Heading } from '@pancakeswap/uikit'\nimport { useWeb3React } from '@web3-react/core'\nimport { Link, useParams } from 'react-router-dom'\nimport { useAppDispatch } from 'state'\nimport { ProposalState, VotingStateLoadingStatus } from 'state/types'\nimport {\n  useGetProposal,\n  useGetVotingStateLoadingStatus,\n  useGetVotes,\n  useGetProposalLoadingStatus,\n} from 'state/voting/hooks'\nimport { fetchProposal, fetchVotes } from 'state/voting'\nimport { useTranslation } from 'contexts/Localization'\nimport Container from 'components/Layout/Container'\nimport ReactMarkdown from 'components/ReactMarkdown'\nimport PageLoader from 'components/Loader/PageLoader'\nimport { isCoreProposal } from '../helpers'\nimport { ProposalStateTag, ProposalTypeTag } from '../components/Proposals/tags'\nimport Layout from '../components/Layout'\nimport Details from './Details'\nimport Results from './Results'\nimport Vote from './Vote'\nimport Votes from './Votes'\nimport { PageMeta } from '../../../components/Layout/Page'\n\nconst Proposal = () => {\n  const { id }: { id: string } = useParams()\n  const proposal = useGetProposal(id)\n  const { t } = useTranslation()\n  const { account } = useWeb3React()\n  const dispatch = useAppDispatch()\n  const votes = useGetVotes(id)\n  const voteLoadingStatus = useGetVotingStateLoadingStatus()\n  const proposalLoadingStatus = useGetProposalLoadingStatus()\n  const hasAccountVoted = account && votes.some((vote) => vote.voter.toLowerCase() === account.toLowerCase())\n  const { id: proposalId = null, snapshot = null } = proposal ?? {}\n  const isPageLoading =\n    voteLoadingStatus === VotingStateLoadingStatus.LOADING || proposalLoadingStatus === VotingStateLoadingStatus.LOADING\n\n  useEffect(() => {\n    dispatch(fetchProposal(id))\n  }, [id, dispatch])\n\n  // We have to wait for the proposal to load before fetching the votes because we need to include the snapshot\n  useEffect(() => {\n    if (proposalId && snapshot) {\n      dispatch(fetchVotes({ proposalId, block: Number(snapshot) }))\n    }\n  }, [proposalId, snapshot, dispatch])\n\n  if (!proposal) {\n    return <PageLoader />\n  }\n\n  return (\n    <Container py=\"40px\">\n      <PageMeta />\n      <Box mb=\"40px\">\n        <Button as={Link} to=\"/voting\" variant=\"text\" startIcon={<ArrowBackIcon color=\"primary\" width=\"24px\" />} px=\"0\">\n          {t('Back to Vote Overview')}\n        </Button>\n      </Box>\n      <Layout>\n        <Box>\n          <Box mb=\"32px\">\n            <Flex alignItems=\"center\" mb=\"8px\">\n              <ProposalStateTag proposalState={proposal.state} />\n              <ProposalTypeTag isCoreProposal={isCoreProposal(proposal)} ml=\"8px\" />\n            </Flex>\n            <Heading as=\"h1\" scale=\"xl\" mb=\"16px\">\n              {proposal.title}\n            </Heading>\n            <Box>\n              <ReactMarkdown>{proposal.body}</ReactMarkdown>\n            </Box>\n          </Box>\n          {!isPageLoading && !hasAccountVoted && proposal.state === ProposalState.ACTIVE && (\n            <Vote proposal={proposal} mb=\"16px\" />\n          )}\n          <Votes votes={votes} />\n        </Box>\n        <Box>\n          <Details proposal={proposal} />\n          <Results choices={proposal.choices} votes={votes} />\n        </Box>\n      </Layout>\n    </Container>\n  )\n}\n\nexport default Proposal\n","import { SNAPSHOT_HUB_API, SNAPSHOT_VOTING_API } from 'config/constants/endpoints'\nimport tokens from 'config/constants/tokens'\nimport { Proposal, ProposalState, ProposalType, Vote } from 'state/types'\nimport { simpleRpcProvider } from 'utils/providers'\nimport { ADMINS, PANUSDTD_SPACE, SNAPSHOT_VERSION } from './config'\n\nexport const isCoreProposal = (proposal: Proposal) => {\n  return ADMINS.includes(proposal.author.toLowerCase())\n}\n\nexport const filterProposalsByType = (proposals: Proposal[], proposalType: ProposalType) => {\n  switch (proposalType) {\n    case ProposalType.COMMUNITY:\n      return proposals.filter((proposal) => !isCoreProposal(proposal))\n    case ProposalType.CORE:\n      return proposals.filter((proposal) => isCoreProposal(proposal))\n    case ProposalType.ALL:\n    default:\n      return proposals\n  }\n}\n\nexport const filterProposalsByState = (proposals: Proposal[], state: ProposalState) => {\n  return proposals.filter((proposal) => proposal.state === state)\n}\n\nexport interface Message {\n  address: string\n  msg: string\n  sig: string\n}\n\n/**\n * Generates metadata required by snapshot to validate payload\n */\nexport const generateMetaData = () => {\n  return {\n    plugins: {},\n    network: 56,\n    strategies: [{ name: 'cake', params: { symbol: 'USDTd', address: tokens.cake.address, decimals: 18 } }],\n  }\n}\n\n/**\n * Returns data that is required on all snapshot payloads\n */\nexport const generatePayloadData = () => {\n  return {\n    version: SNAPSHOT_VERSION,\n    timestamp: (Date.now() / 1e3).toFixed(),\n    space: PANUSDTD_SPACE,\n  }\n}\n\n/**\n * General function to send commands to the snapshot api\n */\nexport const sendSnapshotData = async (message: Message) => {\n  const response = await fetch(SNAPSHOT_HUB_API, {\n    method: 'post',\n    headers: {\n      Accept: 'application/json',\n      'Content-Type': 'application/json',\n    },\n    body: JSON.stringify(message),\n  })\n\n  if (!response.ok) {\n    const error = await response.json()\n    throw new Error(error?.error_description)\n  }\n\n  const data = await response.json()\n  return data\n}\n\nexport const getVotingPower = async (account: string, poolAddresses: string[], block?: number) => {\n  const blockNumber = block || (await simpleRpcProvider.getBlockNumber())\n  const response = await fetch(`${SNAPSHOT_VOTING_API}/power`, {\n    method: 'post',\n    headers: {\n      'Content-Type': 'application/json',\n    },\n    body: JSON.stringify({\n      address: account,\n      block: blockNumber,\n      poolAddresses,\n    }),\n  })\n  const data = await response.json()\n  return data.data\n}\n\nexport const calculateVoteResults = (votes: Vote[]): { [key: string]: Vote[] } => {\n  return votes.reduce((accum, vote) => {\n    const choiceText = vote.proposal.choices[vote.choice - 1]\n\n    return {\n      ...accum,\n      [choiceText]: accum[choiceText] ? [...accum[choiceText], vote] : [vote],\n    }\n  }, {})\n}\n\nexport const getTotalFromVotes = (votes: Vote[]) => {\n  return votes.reduce((accum, vote) => {\n    let power = parseFloat(vote.metadata?.votingPower)\n\n    if (!power) {\n      power = 0\n    }\n\n    return accum + power\n  }, 0)\n}\n","export const PROPOSALS_TO_SHOW = 10\nexport const ADMINS = [\n  '0x842B508681eE336E74600974B4623B709477d29D', // TARO\n  '0x977e0c1005dff8749f8cac22f4df0bd5f013d1a7', // CHUNGUS\n  '0x6eaf1b33b8672c5dc40ab8f4ba3a0111723126c7', // HOPS\n].map((address) => address.toLowerCase())\nexport const IPFS_GATEWAY = 'https://gateway.ipfs.io/ipfs'\nexport const SNAPSHOT_VERSION = '0.1.3'\nexport const PANUSDTD_SPACE = 'cake.eth'\nexport const VOTE_THRESHOLD = 10\n"],"sourceRoot":""}